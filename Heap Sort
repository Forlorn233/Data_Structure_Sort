/**
 *
 * @Author Forlorn123
 *
 * ***/
public class HeapSort {
    public static void sort(int[] array){
        //construct pile top
        //start from father node(array[len/2-1]) of
        //the last leaf node(array[len-1])
        for(int i= array.length/2-1;i>=0;i--){
            Heap(array,i, array.length);
        }
        //Heap Sort
        for(int j=array.length-1;j>0;j--){
            //swap the top elem and bottom elem
           swap(array,0,j);
           //recursive,make the rest elem(s) pile
           Heap(array,0,j);
        }
    }
    //Adjust heap pile from node(array[i])
    //Para array:
    //Para i:
    //Para:length:
    public static void Heap(int[] array, int i, int length){
        int temp=array[i];
        //k is the left child of i
        //each circulation turns into k's left child
        for(int k=2*i+1;k<length;k=2*k+1){
            //k+1 is right child of i
            //i's right child greater than left child
            if(k+1<length&&array[k]<array[k+1]){
                k++;//find the biggest elem
            }
            if(array[k]<temp){
                break;
            }
            if(array[k]>temp){
                array[i]=array[k];
                i=k;
            }
            else{
                break;
            }
        }
        //adjust node into the terminal
        array[i]=temp;
    }
    public static void swap(int[] array,int i,int j){
        int temp=array[i];
        array[i]=array[j];
        array[j]=temp;
    }
}
